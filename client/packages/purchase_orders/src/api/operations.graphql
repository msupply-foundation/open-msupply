fragment PurchaseOrderRow on PurchaseOrderNode {
  id
  number
  supplier {
    __typename
    id
    name
    # Add more fields here as required
  }
  createdDatetime
  confirmedDatetime
  status
  targetMonths
  lines {
    totalCount
  }
  comment
}

fragment PurchaseOrder on PurchaseOrderNode {
  __typename
  id
  number
  additionalInstructions
  advancePaidDate
  agentCommission
  authorisingOfficer1
  authorisingOfficer2
  comment
  communicationsCharge
  contractSignedDate
  confirmedDatetime
  createdDatetime
  currencyId
  documentCharge
  donor {
    id
    name
    # Add as required
  }
  foreignExchangeRate
  expectedDeliveryDate
  freightCharge
  freightConditions
  headingMessage
  insuranceCharge
  receivedAtPortDate
  reference
  lines {
    __typename
    nodes {
      ...PurchaseOrderLine
    }
    totalCount
  }
  sentDate
  shippingMethod
  status
  store {
    id
    # name
  }
  supplier {
    __typename
    id
    name
    # Add more fields here as required
  }
  supplierAgent
  supplierDiscountAmount
  supplierDiscountPercentage
  targetMonths
}

fragment PurchaseOrderLine on PurchaseOrderLineNode {
  __typename
  id
  authorisedNumberOfUnits
  expectedDeliveryDate
  item {
    id
    code
    name
    unitName
    # Add as required
  }
  sohInUnits
  requestedNumberOfUnits
  requestedPackSize
  requestedDeliveryDate
  receivedNumberOfUnits
}

query purchaseOrders(
  $first: Int
  $offset: Int
  $key: PurchaseOrderSortFieldInput!
  $desc: Boolean
  $filter: PurchaseOrderFilterInput
  $storeId: String!
) {
  purchaseOrders(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
    storeId: $storeId
  ) {
    ... on PurchaseOrderConnector {
      __typename
      nodes {
        ...PurchaseOrderRow
      }
      totalCount
    }
  }
}

query purchaseOrderById($purchaseOrderId: String!, $storeId: String!) {
  purchaseOrder(id: $purchaseOrderId, storeId: $storeId) {
    __typename
    ... on RecordNotFound {
      __typename
      description
    }
    ... on PurchaseOrderNode {
      ...PurchaseOrder
    }
  }
}

mutation insertPurchaseOrder(
  $input: InsertPurchaseOrderInput!
  $storeId: String!
) {
  insertPurchaseOrder(input: $input, storeId: $storeId) {
    ... on IdResponse {
      id
    }
  }
}

mutation updatePurchaseOrder(
  $input: UpdatePurchaseOrderInput!
  $storeId: String!
) {
  updatePurchaseOrder(input: $input, storeId: $storeId) {
    ... on IdResponse {
      id
    }
  }
}
