fragment GoodsReceivedRow on GoodsReceivedNode {
  id
  number
  status
  comment
  createdDatetime
  receivedDatetime
  finalisedDatetime
  purchaseOrderNumber
  supplierReference
  supplier {
    id
    name
  }
}

fragment GoodsReceivedLine on GoodsReceivedLineNode {
  __typename
  id
  lineNumber
  batch
  expiryDate
  receivedPackSize
  numberOfPacksReceived
  item {
    code
    name
  }
}

fragment GoodsReceived on GoodsReceivedNode {
  __typename
  id
  comment
  createdBy
  createdDatetime
  number
  finalisedDatetime
  purchaseOrderNumber
  receivedDatetime
  status
  supplier {
    id
    name
  }
  lines {
    totalCount
    nodes {
      ...GoodsReceivedLine
    }
  }
}

query goodsReceivedList(
  $first: Int
  $offset: Int
  $key: GoodsReceivedSortFieldInput!
  $desc: Boolean
  $filter: GoodsReceivedFilterInput
  $storeId: String!
) {
  goodsReceivedList(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
    storeId: $storeId
  ) {
    ... on GoodsReceivedConnector {
      __typename
      nodes {
        ...GoodsReceivedRow
      }
      totalCount
    }
  }
}

query goodsReceivedById($id: String!, $storeId: String!) {
  goodsReceived(id: $id, storeId: $storeId) {
    ... on GoodsReceivedNode {
      ...GoodsReceived
    }
    ... on RecordNotFound {
      __typename
      description
    }
  }
}

mutation insertGoodsReceived(
  $input: InsertGoodsReceivedInput!
  $storeId: String!
) {
  insertGoodsReceived(input: $input, storeId: $storeId) {
    ... on IdResponse {
      id
    }
  }
}

mutation deleteGoodsReceived($id: String!, $storeId: String!) {
  deleteGoodsReceived(id: $id, storeId: $storeId) {
    ... on DeleteResponse {
      id
    }
  }
}

mutation updateGoodsReceived(
  $input: UpdateGoodsReceivedInput!
  $storeId: String!
) {
  updateGoodsReceived(input: $input, storeId: $storeId) {
    ... on IdResponse {
      id
    }
  }
}
