fragment CampaignRow on CampaignNode {
  __typename
  id
  name
  startDate
  endDate
}

query campaigns(
  $sort: [CampaignSortInput!]
  $first: Int
  $offset: Int
  $filter: CampaignFilterInput
) {
  centralServer {
    campaign {
      campaigns(
        sort: $sort
        page: { first: $first, offset: $offset }
        filter: $filter
      ) {
        __typename
        ... on CampaignConnector {
          __typename
          totalCount
          nodes {
            __typename
            ...CampaignRow
          }
        }
      }
    }
  }
}

# mutation insertLocation($input: InsertLocationInput!, $storeId: String!) {
#   insertLocation(input: $input, storeId: $storeId) {
#     ... on InsertLocationError {
#       __typename
#       error {
#         description
#         ... on InternalError {
#           __typename
#           description
#           fullError
#         }
#         ... on DatabaseError {
#           __typename
#           description
#           fullError
#         }
#         ... on RecordAlreadyExist {
#           __typename
#           description
#         }
#         ... on UniqueValueViolation {
#           __typename
#           description
#           field
#         }
#       }
#     }
#     ...CampaignRow
#   }
# }

# mutation updateLocation($input: UpdateLocationInput!, $storeId: String!) {
#   updateLocation(input: $input, storeId: $storeId) {
#     ... on UpdateLocationError {
#       __typename
#       error {
#         description
#         ... on InternalError {
#           __typename
#           description
#           fullError
#         }
#         ... on DatabaseError {
#           __typename
#           description
#           fullError
#         }
#         ... on RecordBelongsToAnotherStore {
#           __typename
#           description
#         }
#         ... on RecordNotFound {
#           __typename
#           description
#         }
#         ... on UniqueValueViolation {
#           __typename
#           description
#           field
#         }
#       }
#     }
#     ...CampaignRow
#   }
# }

# mutation deleteLocation($storeId: String!, $input: DeleteLocationInput!) {
#   deleteLocation(storeId: $storeId, input: $input) {
#     ... on DeleteLocationError {
#       __typename
#       error {
#         description
#         ... on RecordNotFound {
#           __typename
#           description
#         }
#         ... on DatabaseError {
#           __typename
#           description
#           fullError
#         }
#         ... on RecordBelongsToAnotherStore {
#           __typename
#           description
#         }
#         ... on LocationInUse {
#           __typename
#           description
#           stockLines {
#             ... on StockLineConnector {
#               __typename
#               nodes {
#                 __typename
#                 id
#                 itemId
#               }
#               totalCount
#             }
#           }
#           invoiceLines {
#             ... on InvoiceLineConnector {
#               __typename
#               nodes {
#                 __typename
#                 id
#               }
#             }
#             totalCount
#           }
#         }
#       }
#     }
#     ... on DeleteResponse {
#       __typename
#       id
#     }
#   }
# }
