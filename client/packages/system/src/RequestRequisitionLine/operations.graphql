fragment ItemWithStats on ItemNode {
  id
  name
  code
  unitName
  defaultPackSize
  isVaccine
  doses
  availableStockOnHand(storeId: $storeId)
  stats(storeId: $storeId) {
    averageMonthlyConsumption
    availableStockOnHand
    availableMonthsOfStockOnHand
    totalConsumption
    stockOnHand
    monthsOfStockOnHand
  }
  isVaccine
}

fragment RequestLine on RequisitionLineNode {
  id
  itemId
  requestedQuantity
  suggestedQuantity
  comment
  itemName
  requisitionNumber
  initialStockOnHandUnits
  incomingUnits
  outgoingUnits
  lossInUnits
  additionInUnits
  expiringUnits
  daysOutOfStock

  itemStats {
    __typename
    availableStockOnHand
    availableMonthsOfStockOnHand
    averageMonthlyConsumption
  }
  linkedRequisitionLine {
    approvedQuantity
    approvalComment
  }
  item {
    ...ItemWithStats
  }
  reason {
    ...ReasonOptionRow
  }
}

fragment Request on RequisitionNode {
  __typename
  id
  type
  status
  createdDatetime
  sentDatetime
  finalisedDatetime
  requisitionNumber
  colour
  theirReference
  comment
  otherPartyName
  otherPartyId
  maxMonthsOfStock
  minMonthsOfStock
  approvalStatus

  user {
    __typename
    username
    email
  }

  lines {
    __typename
    totalCount
    nodes {
      ...RequestLine
    }
  }

  program {
    id
  }

  shipments {
    __typename
    totalCount
    nodes {
      __typename
      id
      invoiceNumber
      createdDatetime

      user {
        __typename
        username
      }
    }
  }

  otherParty(storeId: $storeId) {
    id
    code
    isCustomer
    isSupplier
    isOnHold
    name
    store {
      id
      code
    }
  }

  linkedRequisition {
    approvalStatus
  }
  programName
  period {
    id
    name
    startDate
    endDate
  }
  orderType
  isEmergency
}

query OnlyHereToAvoidUnusedWarnings {
  me {
    __typename
  }
}
