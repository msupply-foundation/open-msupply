fragment StockLineRow on StockLineNode {
  availableNumberOfPacks
  batch
  costPricePerPack
  expiryDate
  id
  itemId
  locationId
  locationName
  onHold
  packSize
  sellPricePerPack
  storeId
  totalNumberOfPacks
  item {
    code
    name
    unitName
  }
}

query stockLines(
  $first: Int
  $offset: Int
  $key: StockLineSortFieldInput!
  $desc: Boolean
  $filter: StockLineFilterInput
  $storeId: String!
) {
  stockLines(
    storeId: $storeId
    filter: $filter
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
  ) {
    ... on StockLineConnector {
      __typename
      nodes {
        __typename
        ...StockLineRow
      }
      totalCount
    }
  }
}

query stockLine($id: String!, $storeId: String!) {
  stockLines(storeId: $storeId, filter: { id: { equalTo: $id } }) {
    ... on StockLineConnector {
      __typename
      nodes {
        __typename
        ...StockLineRow
      }
      totalCount
    }
  }
}

mutation updateStockLine($input: UpdateStockLineInput!, $storeId: String!) {
  updateStockLine(input: $input, storeId: $storeId) {
    ... on StockLineNode {
      __typename
      ...StockLineRow
    }
  }
}
