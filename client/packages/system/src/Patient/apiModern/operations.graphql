fragment Insurance on InsuranceNode {
  id
  insuranceProviderId
  policyType
  policyNumber
  policyNumberFamily
  policyNumberPerson
  discountPercentage
  expiryDate
  isActive
  insuranceProviders {
    id
    providerName
  }
}

query insurances(
  $storeId: String!
  $nameId: String!
  $sort: [InsuranceSortInput!]
) {
  insurances(storeId: $storeId, nameId: $nameId, sort: $sort) {
    ... on InsuranceConnector {
      __typename
      nodes {
        ...Insurance
      }
    }
  }
}

mutation insertInsurance($storeId: String!, $input: InsertInsuranceInput!) {
  insertInsurance(storeId: $storeId, input: $input) {
    ... on IdResponse {
      id
    }
  }
}

mutation updateInsurance($storeId: String!, $input: UpdateInsuranceInput!) {
  updateInsurance(storeId: $storeId, input: $input) {
    ... on IdResponse {
      id
    }
  }
}

fragment InsuranceProviders on InsuranceProvidersNode {
  id
  providerName
  isActive
  prescriptionValidityDays
}

query insuranceProviders($storeId: String!) {
  insuranceProviders(storeId: $storeId) {
    ... on InsuranceProvidersConnector {
      __typename
      nodes {
        ...InsuranceProviders
      }
    }
  }
}
