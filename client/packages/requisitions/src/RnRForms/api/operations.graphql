fragment RnRForm on RnRFormNode {
  id
  createdDatetime
  periodId
  periodName
  periodLength
  period {
    ...Period
  }
  programId
  programName
  supplierName
  supplierId
  status
  theirReference
  comment
}

fragment RnRFormLine on RnRFormLineNode {
  id
  averageMonthlyConsumption
  previousMonthlyConsumptionValues
  initialBalance
  quantityReceived
  quantityConsumed
  adjustedQuantityConsumed
  losses
  adjustments
  stockOutDuration
  finalBalance
  minimumQuantity
  maximumQuantity
  expiryDate
  calculatedRequestedQuantity
  enteredRequestedQuantity
  lowStock
  comment
  confirmed
  approvedQuantity
  item {
    code
    name
    unitName
    strength
    venCategory
  }
}

fragment Period on PeriodNode {
  id
  name
  startDate
  endDate
}

fragment PeriodSchedule on PeriodScheduleNode {
  id
  name
  periods {
    id
    inUse
    period {
      ...Period
    }
  }
}

query rnrForms(
  $storeId: String!
  $first: Int
  $offset: Int
  $key: RnRFormSortFieldInput!
  $desc: Boolean
  $filter: RnRFormFilterInput
) {
  rAndRForms(
    storeId: $storeId
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on RnRFormConnector {
      __typename
      nodes {
        __typename
        ...RnRForm
      }
      totalCount
    }
  }
}

query schedulesAndPeriods($storeId: String!, $programId: String!) {
  schedulesWithPeriodsByProgram(storeId: $storeId, programId: $programId) {
    __typename
    ... on PeriodSchedulesConnector {
      nodes {
        ...PeriodSchedule
      }
    }
  }
}

query rAndRFormDetail($rnrFormId: String!, $storeId: String!) {
  rAndRForm(rnrFormId: $rnrFormId, storeId: $storeId) {
    __typename
    ... on NodeError {
      __typename
      error {
        description
      }
    }
    ... on RnRFormNode {
      __typename
      ...RnRForm
      lines {
        ...RnRFormLine
      }
    }
  }
}

mutation createRnRForm($storeId: String!, $input: InsertRnRFormInput!) {
  insertRnrForm(storeId: $storeId, input: $input) {
    __typename
    ... on RnRFormNode {
      __typename
      ...RnRForm
    }
  }
}

mutation updateRnRForm($storeId: String!, $input: UpdateRnRFormInput!) {
  updateRnrForm(storeId: $storeId, input: $input) {
    __typename
    ... on RnRFormNode {
      __typename
      ...RnRForm
    }
  }
}

mutation finaliseRnRForm($storeId: String!, $input: FinaliseRnRFormInput!) {
  finaliseRnrForm(storeId: $storeId, input: $input) {
    __typename
    ... on RnRFormNode {
      __typename
      ...RnRForm
    }
  }
}

mutation deleteRnRForm($storeId: String!, $input: DeleteRnRFormInput!) {
  deleteRnrForm(storeId: $storeId, input: $input) {
    ... on DeleteResponse {
      __typename
      id
    }
  }
}
