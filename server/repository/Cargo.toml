[package]
name = "repository"
version = "0.1.1"
edition = "2018"

[lib]
path = "src/lib.rs"
doctest = false

[dependencies]

util = { path = "../util" }

chrono = { workspace = true }
rand = { workspace = true }
diesel = { version = "2.2.1", default-features = false, features = [
    "r2d2",
    "numeric",
    "chrono",
    "32-column-tables",
    "with-deprecated",
] }
diesel-derive-enum = { version = "2.1.0", default-features = false }
diesel_migrations = "2.2.0"
futures-util = { workspace = true }
libsqlite3-sys = { version = "0.28.0", features = ["bundled"], optional = true }
# 0.31.0 depends on libsqlite3-sys 0.28.0
rusqlite = "0.31.0"
regex = { workspace = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = { workspace = true }
thiserror = { workspace = true }
log = { workspace = true }
# Migration script embeds package.json from repository root, single files is embeded and accessed
# via ::get(""), which doesn't work in debug (test) mode on linux, debug-embed features makes rust-embed
# behave as if it is in release mode 
rust-embed = { version = "8.4.0", features = ["debug-embed"] }
anyhow.workspace = true
pretty_assertions = { workspace = true }
strum = { workspace = true }

[dev-dependencies]
tokio = { version = "1.38.0", features = ["time", "rt-multi-thread", "macros"] }
actix-rt = { workspace = true }
strum = { workspace = true }

[features]
default = ["sqlite"]
sqlite = ["diesel/sqlite", "libsqlite3-sys", "diesel-derive-enum/sqlite"]
memory = ["diesel/sqlite", "libsqlite3-sys", "diesel-derive-enum/sqlite"]
postgres = [
    "diesel/postgres",
    "diesel/postgres_backend",
    "diesel-derive-enum/postgres",
]
integration_test = []

[build-dependencies]
glob = "0.3.1"

[lints]
workspace = true
