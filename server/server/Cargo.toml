[package]
name = "server"
version = "0.1.0"
authors = ["will"]
edition = "2018"
default-run = "remote_server"
build = "src/set_icon.rs"

[lib]
path = "src/lib.rs"
doctest = false

[[bin]]
path = "src/main.rs"
name = "remote_server"

[dependencies]

graphql = { path = "../graphql" }
graphql_core = { path = "../graphql/core" }
graphql_types = { path = "../graphql/types" }
repository = { path = "../repository" }
service = { path = "../service" }
util = { path = "../util" }

machine-uid = { version = "0.2.0", optional = true }

actix-cors = "0.6.1"
actix-web = { version = "4.0.1", features = ["rustls"] }
actix-files = "0.6.0"
# OpenSSL is currently only used indirectly by external crates. For the Android build we need to use actix-cors = "0.6.1"
# the "openssl/vendored" feature to make the cross compilation work, i.e. to avoid linking against
# the openssl shared lib which is not easily available on the host platform. To enable the
# "openssl/vendored" feature on Android (see below) the openssl crate needs to be a dependency.
openssl = { version = "0.10", features = ["v110"] }
anyhow = "1.0.44"
config = "0.11.0"
chrono = { version = "0.4", features = ["serde"] }
log = "0.4.14"
reqwest = { version = "0.11.10", features = ["json"] }
rustls = "0.20.4"
rustls-pemfile = "1.0.0"
serde = "1.0.137"
serde_json = "1.0.66"
tokio = { version = "1.17.0", features = ["macros"] }
thiserror = "1"
clap = { version = "3.1.8", features = ["derive"] }
rust-embed = "6.4.0"
mime_guess = "2.0.4"
local-ip-address = { version = "0.4.4", optional = true }
simple-dns = "0.4.6"
simple-mdns = "0.3.9"
fast_log = { version = "1.5" }
rcgen = "0.9.2"

[dev-dependencies]
actix-rt = "2.6.0"
assert-json-diff = "2.0.1"
httpmock = "0.6"

[target.'cfg(windows)'.build-dependencies]
winres = "0.1"

[features]
default = ["sqlite", "dep:local-ip-address", "dep:machine-uid"]
sqlite = ["repository/sqlite"]
postgres = ["repository/postgres"]
# See openssl comment regarding the "openssl/vendored" feature
android = ["repository/sqlite", "openssl/vendored"]
