[package]
name = "server"
version = "0.1.0"
authors = ["mSupply Foundation"]
edition = "2018"
default-run = "remote_server"
build = "src/set_icon.rs"

[lib]
path = "src/lib.rs"
doctest = false

[[bin]]
path = "src/main.rs"
name = "remote_server"

[dependencies]

graphql = { path = "../graphql" }
graphql_core = { path = "../graphql/core" }
repository = { path = "../repository" }
service = { path = "../service" }
util = { path = "../util" }

machine-uid = { version = "0.5.1", optional = true }

actix-cors = "0.7.0"
actix-web = { version = "4.7.0", features = ["rustls-0_23"] }
actix-files.workspace = true
anyhow.workspace = true
config = "0.12.0"
chrono = { workspace = true }
thiserror = { workspace = true }
log = { workspace = true }
rustls = {version = "0.23.10", default-features = false, features = ["ring"]}
rustls-pemfile = "2.1.2"
serde = { workspace = true }
tokio = { workspace = true }
clap = { workspace = true }
rust-embed = "6.4.0"
mime_guess = "2.0.4"
futures = { workspace = true }
simple-log = { workspace = true }
rcgen = { workspace = true }
regex = { workspace = true }
actix-multipart = { workspace = true }
futures-util = { workspace = true }
serde_json = { workspace = true }

[dev-dependencies]
actix-rt = { workspace = true }
assert-json-diff = { workspace = true }
httpmock = { workspace = true }

[target.'cfg(windows)'.build-dependencies]
winres = "0.1"

[target.'cfg(not(target_os = "android"))'.dependencies]
astro-dnssd = { version = "0.3.2" }

[features]
default = ["sqlite", "dep:machine-uid"]
sqlite = ["repository/sqlite"]
postgres = ["repository/postgres"]
android = ["repository/sqlite"]

[lints]
workspace = true
