on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC
  workflow_dispatch: # Allows manual triggering of the workflow

name: Nightly Automated Builds

jobs:
  create-tags:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate tagging

      - name: Create tags for target branches
        run: |
          # Tag develop branch
          git checkout develop
          if [[ -z "${APP_BUILD_VERSION}" ]]; then
              PKG_VERSION=$(cat ./package.json | grep '"version":' | sed 's/.*"version": "\([^-"]*\).*/\1/')
              COMMIT_DATE=$(git log -1 --format=%cd --date=format:%m%d%H%M)
              export APP_BUILD_VERSION=$PKG_VERSION.$COMMIT_DATE
          fi
          TAG_NAME="v$APP_BUILD_VERSION-develop"

          echo "Creating tag for develop: $TAG_NAME"
          git tag $TAG_NAME
          git push origin $TAG_NAME

          # Tag latest RC branch
          LATEST_RC=$(git branch -r | grep -E 'v[0-9.]+-(R|r)(C|c)' | sed 's/origin\///' | sort -V | tail -1 | xargs)

          if [[ -n "$LATEST_RC" ]]; then
            git checkout $LATEST_RC
            unset APP_BUILD_VERSION # Reset for RC branch
            if [[ -z "${APP_BUILD_VERSION}" ]]; then 
              PKG_VERSION=$(cat ./package.json | grep '"version":' | sed 's/.*"version": "\([^-"]*\).*/\1/')
              COMMIT_DATE=$(git log -1 --format=%cd --date=format:%m%d%H%M)
              export APP_BUILD_VERSION=$PKG_VERSION.$COMMIT_DATE
            fi
            TAG_NAME="v$APP_BUILD_VERSION-RC"

            echo "Creating tag for latest RC: $TAG_NAME"
            git tag $TAG_NAME
            git push origin $TAG_NAME
          else
            echo "No RC branches found"
          fi
